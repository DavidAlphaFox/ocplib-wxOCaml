include "<wx/graphics.h>"

class wxGraphicsContext inherit wxGraphicsObject begin

   method(void, 	Clip, ClipRegion) ( wxRegion &region)
   method(void, 	Clip) (double x, double y, double w, double h)

(*
   method(void, 	ConcatTransform ( wxGraphicsMatrix &matrix)=0
 	Concatenates the passed in transform with the current transform of this context. 
   method(wxGraphicsBitmap, 	CreateBitmap) ( wxBitmap &bitmap)=0
 	Creates wxGraphicsBitmap from an existing wxBitmap. 
   method(wxGraphicsBitmap 	CreateBitmapFromImage ( wxImage &image)
 	Creates wxGraphicsBitmap from an existing wxImage. 
   method(wxGraphicsBitmap 	CreateSubBitmap ( wxGraphicsBitmap &bitmap, double x, double y, double w, double h)=0
 	Extracts a sub-bitmap from an existing bitmap. 
   method(wxGraphicsBrush 	CreateBrush ( wxBrush &brush) 
 	Creates a native brush from a wxBrush. 
   method(wxGraphicsFont 	CreateFont ( wxFont &font,  wxColour &col=*wxBLACK) 
 	Creates a native graphics font from a wxFont and a text colour. 
   method(wxGraphicsFont 	CreateFont (double sizeInPixels,  wxString &facename, int flags=wxFONTFLAG_DEFAULT,  wxColour &col=*wxBLACK) 
 	Creates a font object with the specified attributes. 
   method(wxGraphicsMatrix 	CreateMatrix (double a=1.0, double b=0.0, double c=0.0, double d=1.0, double tx=0.0, double ty=0.0) 
 	Creates a native affine transformation matrix from the passed in values. 
wxGraphicsMatrix 	CreateMatrix ( wxAffineMatrix2DBase &mat) 
 	Creates a native affine transformation matrix from the passed generic one. 
wxGraphicsPath 	CreatePath () 
 	Creates a native graphics path which is initially empty. 
   method(wxGraphicsPen 	CreatePen ( wxPen &pen) 
 	Creates a native pen from a wxPen. 
   method(void, 	DrawEllipse (double x, double y, double w, double h)
 	Draws an ellipse. 
   method(void, 	DrawIcon ( wxIcon &icon, double x, double y, double w, double h)=0
 	Draws the icon. 
   method(void, 	DrawLines (size_t n,  wxPoint2DDouble *points, wxPolygonFillMode fillStyle=wxODDEVEN_RULE)
 	Draws a polygon. 
   method(void, 	DrawPath ( wxGraphicsPath &path, wxPolygonFillMode fillStyle=wxODDEVEN_RULE)
 	Draws the path by first filling and then stroking. 
   method(void, 	DrawRectangle (double x, double y, double w, double h)
 	Draws a rectangle. 
   method(void, 	DrawRoundedRectangle (double x, double y, double w, double h, double radius)
 	Draws a rounded rectangle. 
*)


   method(void, DrawText) ( wxString &str, double x, double y)
   method(void, DrawText, DrawTextAngle) ( wxString &str, 
           double x, double y, double angle)

(*
   method(void,	DrawText, DrawTextBrush) ( wxString &str, 
           double x, double y,  
           wxGraphicsBrush &backgroundBrush)
   method(void, DrawText, DrawTextAll) ( wxString &str, 
           double x, double y, 
           double angle,  wxGraphicsBrush &backgroundBrush)

   method(void, 	FillPath) ( wxGraphicsPath &path, wxPolygonFillMode fillStyle=wxODDEVEN_RULE)=0
 	Fills the path with the current brush. 
   method(void * 	GetNativeContext ()=0
 	Returns the native context (CGContextRef for Core Graphics, Graphics pointer for GDIPlus and cairo_t pointer for cairo). 
   method(void, 	GetPartialTextExtents ( wxString &text, wxArrayDouble &widths)  =0
 	Fills the widths array with the widths from the beginning of text to the corresponding character of text. 
   method(void, 	GetTextExtent ( wxString &text, double *width, double *height, double *descent, double *externalLeading)  =0
 	Gets the dimensions of the string using the currently selected font. 
   method(wxGraphicsMatrix 	GetTransform ()  =0
 	Gets the current transformation matrix of this context. 
   method(void, 	ResetClip ()=0
 	Resets the clipping to original shape. 
   method(void, 	Rotate (double angle)=0
 	Rotates the current transformation matrix (in radians). 
   method(void, 	Scale (double xScale, double yScale)=0
 	Scales the current transformation matrix. 
void, 	SetBrush ( wxBrush &brush)
 	Sets the brush for filling paths. 
   method(void, 	SetBrush ( wxGraphicsBrush &brush)
 	Sets the brush for filling paths. 
*)

	method(void, 	SetFont) (wxFont &font, wxColour &colour)
(*
 	Sets the font for drawing text. 
   method(void, 	SetFont ( wxGraphicsFont &font)
 	Sets the font for drawing text. 
void, 	SetPen ( wxPen &pen)
 	Sets the pen used for stroking. 
   method(void, 	SetPen ( wxGraphicsPen &pen)
 	Sets the pen used for stroking. 
   method(void, 	SetTransform ( wxGraphicsMatrix &matrix)=0
 	Sets the current transformation matrix of this context. 
   method(void, 	StrokeLine (double x1, double y1, double x2, double y2)
 	Strokes a single line. 
   method(void, 	StrokeLines (size_t n,  wxPoint2DDouble *beginPoints,  wxPoint2DDouble *endPoints)
 	Stroke disconnected lines from begin to end points, fastest method available for this purpose. 
   method(void, 	StrokeLines (size_t n,  wxPoint2DDouble *points)
 	Stroke lines connecting all the points. 
   method(void, 	StrokePath ( wxGraphicsPath &path)=0
 	Strokes along a path with the current pen. 
   method(void, 	Translate (double dx, double dy)=0
 	Translates the current transformation matrix. 
   method(void, 	BeginLayer (double opacity)=0
 	Redirects all rendering is done into a fully transparent temporary context. 
   method(void, 	EndLayer ()=0
 	Composites back the drawings into the context with the opacity given at the BeginLayer call. 
   method(bool 	SetAntialiasMode (wxAntialiasMode antialias)=0
 	Sets the antialiasing mode, returns true if it supported. 
   method(wxAntialiasMode 	GetAntialiasMode () 
 	Returns the current shape antialiasing mode. 
   method(bool 	SetInterpolationQuality (wxInterpolationQuality interpolation)=0
 	Sets the interpolation quality, returns true if it is supported. 
   method(wxInterpolationQuality 	GetInterpolationQuality () 
 	Returns the current interpolation quality. 
   method(bool 	SetCompositionMode (wxCompositionMode op)=0
 	Sets the compositing operator, returns true if it supported. 
   method(wxCompositionMode 	GetCompositionMode () 
 	Returns the current compositing operator. 
   method(void, 	PushState ()=0
 	Push the current state of the context's transformation matrix on a stack. 
   method(void, 	PopState ()=0
 	Pops a stored state from the stack and sets the current transformation matrix to that state. 
   method(void, 	EnableOffset (bool enable=true)
void, 	DisableOffset ()
bool 	OffsetEnabled ()
wxGraphicsBrush 	CreateLinearGradientBrush (double x1, double y1, double x2, double y2,  wxColour &c1,  wxColour &c2) 
 	Creates a native brush with a linear gradient. 
wxGraphicsBrush 	CreateLinearGradientBrush (double x1, double y1, double x2, double y2,  wxGraphicsGradientStops &stops) 
 	Creates a native brush with a linear gradient. 
   method(wxGraphicsBrush 	CreateRadialGradientBrush (double xo, double yo, double xc, double yc, double radius,  wxColour &oColor,  wxColour &cColor) 
 	Creates a native brush with a radial gradient. 
   method(wxGraphicsBrush 	CreateRadialGradientBrush (double xo, double yo, double xc, double yc, double radius,  wxGraphicsGradientStops &stops)=0
 	Creates a native brush with a radial gradient. 
   method(void, 	DrawBitmap ( wxGraphicsBitmap &bmp, double x, double y, double w, double h)=0
 	Draws the bitmap. 
   method(void, 	DrawBitmap ( wxBitmap &bmp, double x, double y, double w, double h)=0
 	Draws the bitmap. 
Static Public Member Functions

static wxGraphicsContext * 	Create (wxWindow *window)
 	Creates a wxGraphicsContext from a wxWindow. 
static wxGraphicsContext * 	Create ( wxWindowDC &windowDC)
 	Creates a wxGraphicsContext from a wxWindowDC. 
static wxGraphicsContext * 	Create ( wxMemoryDC &memoryDC)
 	Creates a wxGraphicsContext from a wxMemoryDC. 
static wxGraphicsContext * 	Create ( wxPrinterDC &printerDC)
 	Creates a wxGraphicsContext from a wxPrinterDC. 
static wxGraphicsContext * 	Create ( wxEnhMetaFileDC &metaFileDC)
 	Creates a wxGraphicsContext from a wxEnhMetaFileDC. 
static wxGraphicsContext * 	Create (wxImage &image)
 	Creates a wxGraphicsContext associated with a wxImage. 
static wxGraphicsContext * 	CreateFromNative (void *context)
 	Creates a wxGraphicsContext from a native context. 
static wxGraphicsContext * 	CreateFromNativeWindow (void *window)
 	Creates a wxGraphicsContext from a native window. 

*)
end
