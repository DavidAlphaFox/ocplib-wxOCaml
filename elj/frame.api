class wxObject begin

end

class wxEvtHandler inherit wxObject begin

end

class wxWindowBase inherit wxEvtHandler begin

end

class wxWindow inherit wxWindowBase begin


  new(Create)(wxWindow? _prt,int _id, wxPoint& point, wxSize& sz,int _stl)
	
  method(bool,Close)(bool _force)
  method(bool,Destroy)()
  method(void,ClearBackground)()
  method(void,Fit)()
  method(void,DestroyChildren)()
  method(bool,IsBeingDeleted)()
  method(void,SetLabel)(wxString& _title)
  method(wxString,GetLabel)()
  method(void,SetName)(wxString& _name)
  method(wxString,GetName)()
  method(void,SetId)(int _id)
  method(int,GetId)()
  method(void,SetSize)(int x,int y,int width,int height,int sizeFlags)
  method(void,Move)(int x,int y)
  method(void,Raise)()
  method(void,Lower)()
  method(void,SetClientSize)(int width,int height)
  method(wxPoint,GetPosition)()
  method(wxSize,GetSize)()
  method(wxRect,GetRect)()
  method(wxSize,GetClientSize)()
  method(wxSize,GetBestSize)()
  method(void,Center)(int direction)
  method(void,CenterOnParent)(int dir)
  method(void,SetSizeHints)(int minW,int minH,int maxW,int maxH,int incW,int incH)
  method(int,GetMinWidth)()
  method(int,GetMinHeight)()
  method(int,GetMaxWidth)()
  method(int,GetMaxHeight)()
  method(bool,Show)()
  method(bool,Hide)()
  method(bool,Enable)()
  method(bool,Disable)()
  method(bool,IsShown)()
  method(bool,IsEnabled)()
  method(void,SetWindowStyleFlag)(long style)
  method(int,GetWindowStyleFlag)()
  method(bool,HasFlag)(int flag)
  method(void,SetExtraStyle)(long exStyle)
  method(void,MakeModal)(bool modal)
  method(void,SetFocus)()
  method(wxWindow?,FindFocus)()
(*
  method(int,GetChildren)(void* _res,int _cnt)
{
	if (_res && (unsigned int)_cnt == self->GetChildren().GetCount())
	{
		unsigned int i = 0;
		wxWindowList::compatibility_iterator node = self->GetChildren().GetFirst();
		while (node)
		{
			((void** )_res)[i++] = (void* )(node->GetData());
			node = node->GetNext();
		}

		return i;
	}
	else
		return self->GetChildren().GetCount();
}
	*)

(* Can be specialized for some classes (wxMenu) *)
  method(wxWindow?,GetParent)()
  method(bool,IsTopLevel)()
  method(wxWindow?,FindWindow)(wxString& name)
  method(wxWindow?,FindWindow,FindWindowById)(int _id)
  method(void,AddChild)(wxWindowBase? child)
  method(void,RemoveChild)(wxWindowBase? child)
  method(wxEvtHandler?,GetEventHandler)()
  method(void,PushEventHandler)(wxEvtHandler? handler)
  method(wxEvtHandler?,PopEventHandler)(bool deleteHandler)
  method(void,SetValidator)(wxValidator& validator)
  method(wxValidator?,GetValidator)()
(* what to use for void* ?
  method(void,SetClientData)(void* data)
{
	self->SetClientData( data );
}
  method(void*,GetClientData)()
{
	return (void* )self->GetClientData();
}
*)	
  method(bool,Validate)()
  method(bool,TransferDataToWindow)()
  method(bool,TransferDataFromWindow)()
  method(void,InitDialog)()
  method(void,SetAcceleratorTable)(wxAcceleratorTable& accel)
  method(wxPoint,ConvertPixelsToDialog)(wxPoint& pt)
  method(wxPoint,ConvertDialogToPixels)(wxPoint& pt)
  method(void,WarpPointer)(int x,int y)
  method(void,CaptureMouse)()
  method(void,ReleaseMouse)()
  method(void,Refresh)(bool eraseBackground, wxRect? rect)
  method(void,PrepareDC)(wxDC& dc)
  method(wxRegion&,GetUpdateRegion)()
  method(bool,IsExposed)(int x,int y,int w,int h)
  method(bool,SetBackgroundColour)(wxColour& colour)
  method(void,SetForegroundColour)(wxColour& colour)
  method(wxColour,GetBackgroundColour)()
  method(wxColour,GetForegroundColour)()
  method(void,SetCursor)(wxCursor& cursor)
  method(wxCursor,GetCursor)()
  method(void,SetFont)(wxFont& font)
  method(wxFont,GetFont)()
  method(void,SetCaret)(wxCaret? caret)
  method(wxCaret?,GetCaret)()
  method(int,GetCharHeight)()
  method(int,GetCharWidth)()
(*
  method(void,GetTextExtent)(wxString* string,int* x,int* y,int* descent,int* externalLeading,wxFont* theFont)
{
	self->GetTextExtent( * string, x,  y, descent, externalLeading, theFont );
}
	*)

  method(wxPoint,ScreenToClient)(wxPoint& pos)
  method(void,UpdateWindowUI)()
  method(bool,PopupMenu)(wxMenu? menu,int x,int y)
  method(void,SetScrollPos)(int orient,int pos,bool refresh)
  method(int,GetScrollPos)(int orient)
  method(int,GetScrollThumb)(int orient)
  method(int,GetScrollRange)(int orient)
  method(void,ScrollWindow)(int dx,int dy, wxRect? rect)
  method(void,SetToolTip)(wxString& tip)
  method(wxToolTip?,GetToolTip)()
  method(void,SetDropTarget)(wxDropTarget? dropTarget)
  method(wxDropTarget?,GetDropTarget)()
  method(void,SetConstraints)(wxLayoutConstraints? constraints)
  method(wxLayoutConstraints?,GetConstraints)()
  method(void,SetAutoLayout)(bool autoLayout)
  method(int,GetAutoLayout)()
  method(void,Layout)()

  method(void,UnsetConstraints)(wxLayoutConstraints? c)
  method(wxWindowList?,GetConstraintsInvolvedIn)()
  method(void,AddConstraintReference)(wxWindowBase? otherWin)
  method(void,RemoveConstraintReference)(wxWindowBase? otherWin)
  method(void,DeleteRelatedConstraints)()
  method(void,ResetConstraints)()
  method(void,SetConstraintSizes)(bool recurse)
(*
  method(int,LayoutPhase1)(int* noChanges)
{
	return (int)self->LayoutPhase1(noChanges);
}
	
  method(int,LayoutPhase2)(int* noChanges)
{
	return (int)self->LayoutPhase2(noChanges);
}
*)	
  method(int,DoPhase)(int phase)
  method(void,SetSizeConstraint)(int x,int y,int w,int h)
  method(void,MoveConstraint)(int x,int y)

(*
  method(void,GetSizeConstraint)(int* w,int* h)
{
	self->GetSizeConstraint(w, h);
}
  method(void,GetClientSizeConstraint)(int* w,int* h)
{
	self->GetClientSizeConstraint(w, h);
}
  method(void,GetPositionConstraint)(int* x,int* y)
{
	self->GetPositionConstraint(x, y);
}
*)	
		
  method(void,SetSizer)(wxSizer? sizer)
  method(wxSizer?,GetSizer)()
(*
  method(void*,GetHandle)()
{
	return (void* )self->GetHandle();
}
*)
	
  method(void,SetScrollbar)(int orient,int pos,int thumbVisible,int range,bool refresh)
  method(bool,Reparent)(wxWindow? _par)

(*
#if (wxVERSION_NUMBER < 2800) 
  method(wxSize,GetAdjustedBestSize)()
#else
*)
  method(wxSize,GetEffectiveMinSize)()
(*#endif *)

  method(void,Freeze)()
  method(void,Thaw)()

(*#if (wxVERSION_NUMBER >= 2800) *)
  method(wxPoint,ClientToScreen)(wxPoint& pos)
  method(void,FitInside)()
  method(void,SetVirtualSize)(int w,int h)
  method(wxSize,GetVirtualSize)()

end

class wxNonOwnedWindowBase inherit wxWindow begin

end

class wxTopLevelWindowBase inherit wxNonOwnedWindowBase begin

end

class wxTopLevelWindow inherit wxTopLevelWindowBase begin

 method(bool,EnableCloseButton)(bool enable)
 method(wxWindow?,GetDefaultItem)()
 method(wxIcon,GetIcon)()
 method(wxString,GetTitle)()
 method(void,Iconize)(bool iconize)
 method(bool,IsActive)()
 method(bool,IsIconized)()
 method(bool,IsMaximized)()
 method(void,Maximize)(bool iconize)
 method(void,RequestUserAttention)(int flags)
 method(void,SetDefaultItem)(wxWindow? _item)
 method(void,SetIcon)(wxIcon& _icons)
 method(void,SetIcons)(wxIconBundle& _icons)
 method(void,SetMaxSize)(wxSize& sz)
 method(void,SetMinSize)(wxSize& sz)
 method(void,SetTitle)(wxString& _str)

end

class wxFrame inherit wxTopLevelWindow begin

  new(Create)(wxWindow? _prt,int _id, wxString& _txt, wxPoint& point, wxSize& size,int _stl)

  method(wxStatusBar*,CreateStatusBar)(int number,int style, _ "1")

(*#if wxVERSION_NUMBER >= 2800 *)
 method(void,Maximize)()
(*#endif *)	
 method(void,Restore)()
	
(*#if wxVERSION_NUMBER >= 2800 *)
 method(void,Iconize)()
 method(bool,IsMaximized)()
 method(bool,IsIconized)()
(*#endif*)
 method(wxIcon,GetIcon)()
 method(void,SetIcon)(wxIcon& _icon)
 method(wxPoint,GetClientAreaOrigin)()
 method(void,SetMenuBar)(wxMenuBar? menubar)
 method(wxMenuBar?,GetMenuBar)()
 method(wxStatusBar?,GetStatusBar)()
 method(void,SetStatusBar)(wxStatusBar* statBar)
 method(void,SetStatusText)(wxString& _txt,int _number)
 method(void,SetStatusWidths)(int _n, ints? widths_field)
 method(wxToolBar?,CreateToolBar)(long style, _ "1")
 method(wxToolBar?,GetToolBar)()
 method(void,SetToolBar)(wxToolBar? _toolbar)

(* #if wxVERSION_NUMBER >= 2400 && wxVERSION_NUMBER < 2800 *)
  method(void,SetIcons)(wxIconBundle& icons)

end
